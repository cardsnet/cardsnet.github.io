{"version":3,"sources":["store/reducers/interface.js","store/reducers/user.js","store/api.js","store/config.js","store/utils.js","store/reducers/search.js","store/reducers/cards.js","store/reducers/links.js","store/reducers/editCard.js","store/reducers.js","store/store.js","components/SearchControl.js","components/SmallCards.js","components/ErrorLine.js","AddLink.js","components/Image.js","components/TextRenderer.js","BigCard.js","components/CircleIconButton.js","MainSearchLine.js","components/ControlWithIcon.js","components/FormUtils.js","EditCard.js","NewCard.js","components/ShowMore.js","components/ErrorMessage.js","components/IconElements.js","components/CommentsSection.js","store/selectors.js","CardControls.js","CardsLists.js","components/HelpPage.js","MainPage.js","BaseRouter.js","App.js","serviceWorker.js","index.js"],"names":["actionSetError","createAction","actionSetOpenHelp","handleActions","state","payload","error","isOpenHelp","title","undefined","message","actionSetUserToken","user_token","server","axios","create","baseURL","timeout","defaults","headers","localStorage","makeRequest","configObject","request","then","r","console","log","data","token","window","store","dispatch","catch","response","error_message","Promise","reject","String","prototype","strip","substr","this","replace","RegExp","Object","values","o","keys","map","k","setURL","newURL","history","pushState","openInNewTab","name","url","open","focus","beautifyURL","count","split","padStr","i","searchCardsAction","searchString","page","document","documentElement","scrollTop","actionSetSearchLine","startsWith","actionGetOneCard","slice","actionSearchCardsByType","length","actionSearchCardsByText","actionRefreshSearch","getState","search","value","type","queryType","params","queryGetCardsType","set_cards_action","actionSearchHintsCards","queryString","setHintsCards","searchText","q","querySearchCards","cardID","queryGetCard","setSingleCardData","actionCardNotFound","initialAction","action","actionSetOpenCreateCard","deleteCardAction","id","method","concat_unique_by_id","array","additionalArray","ids","Set","elem","add","has","push","card","items","cards","more","initial","openedCreateCard","hintsCards","filter","comments","utility_cards","parents","controls","liked","disliked","actionSetCategoriesHints","hintsCategories","actionSetOpenEdictCard","actionSetEditInitialValues","openedEditCard","combineReducers","form","formReducer","user","userReducer","cardsReducer","searchReducer","editCard","editCardReducer","links","linksReducer","interface","interfaceReducer","persistConfig","key","storage","persistedReducer","persistReducer","rootReducer","createStore","applyMiddleware","thunk","persistStore","SearchControl","props","iconName","className","style","position","width","autoComplete","onChange","placeholder","aria-label","right","top","aria-hidden","onClick","target","SmallCard","useState","openComment","activeClass","active","userSelect","img","backgroundImage","height","comment","fontSize","SmallCards","children","FormikErrorMessage","obj","formik","submitCount","errors","ErrorLine","Form","Label","SmallCardsList","hints","onCardClick","CardSearch","cardHints","useFormik","initialValues","onSubmit","hint","includes","Group","getFieldProps","e","connect","CategorySearch","categoryIdProps","categoryNameProps","categoryDescProps","useEffect","actionSearchCategories","category","desc","Text","Control","querySearchCategories","LinkDescription","actionCreateLink","queryCreateLink","actionEditLink","queryEditLink","actionDeleteLink","queryDeleteLink","activeMenu","setActiveMenuHook","link_id","target_id","category_id","category_name","category_desc","link_desc","validate","source_id","handleClose","setActiveMenu","menu","handleReset","menuVariant","menuName","submitName","cardLinks","categories","concat","Modal","show","onHide","size","aria-labelledby","centered","backdrop","Header","closeButton","Title","Body","ButtonGroup","fluid","Button","variant","handleChange","link","find","Footer","handleSubmit","Image","toLink","blank","attrs","TextRenderer","text","match","str","space","pair","dangerouslySetInnerHTML","__html","dispatchToProps","actionOpenEditCard","cardValues","showAddLink","setShowAddLink","activeCategory","setActiveCategory","urlsList","urls","activeCategoryObject","x","cn","bottom","AddLink","cursor","href","cat","CircleIconButton","textDecoration","color","icon","lineHeight","AutoTextareaControl","as","TextareaAutosize","ControlWithIcon","iconClass","showIcon","buttonVariant","onIconClick","Row","Col","md","TextMuted","FormControl","UrlsList","customOnChange","Number","join","validationSchema","yup","max","required","handleSave","controlId","setFieldValue","rows","handleDelete","mapDispatchToProps","createCardAction","ShowMore","Icon","selectable","StatisticItem","textGap","CommentControl","OneComment","onDelete","onEdit","onLike","onDislike","editMode","setEditMode","Card","likes","dislikes","actionLikeComment","object","queryToggleCommentLike","actionDislikeComment","queryToggleCommentDislike","actionCreateComment","queryCreateComment","card_id","actionDeleteComment","queryDeleteComment","actionEditComment","queryEditComment","preventDefault","actionLikeCard","queryToggleCardLike","actionDislikeCard","queryToggleCardDislike","temp","minHeight","reduce","acc","Date","timestamp","getDate","getMonth","getFullYear","views","CardLink","CardsList","rel","styleMarginsAndWidth","left","marginTop","marginLeft","marginRight","editCardValues","haveMoreCards","searchValue","currentPage","editCardAction","newCard","getCardsByType","location","hostname","closeEditCard","leftSize","zIndex","paddingTop","headerSize","require","OneCardPage","React","Component","CardsQuery","paramsDict","parse","path","component","App","BaseRouter","Boolean","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4d9c4067.chunk.js","sourcesContent":["import {createAction, handleActions} from \"redux-actions\";\n\nexport const actionSetError = createAction('actionSetError')\nexport const actionSetOpenHelp = createAction('actionSetOpenHelp')\nexport const actionCloseError = () => dispatch => dispatch(actionSetError({}))\nexport const actionRequestError = message => dispatch => dispatch(actionSetError({\n    title: 'Ошибка выполнения запроса',\n    message\n}))\n\nexport default handleActions(\n    {\n        actionSetError: (state, {payload}) => ({...state, error: payload}),\n        actionSetOpenHelp: (state, {payload}) => ({...state, isOpenHelp: payload}),\n    }, {\n        error: {\n            title: undefined,\n            message: ''\n        },\n        isOpenHelp: true\n    }\n)","import {createAction, handleActions} from \"redux-actions\";\n\nexport const actionSetUserToken = createAction('actionSetUserToken')\n\nexport default handleActions(\n    {\n        actionSetUserToken: ({payload}, state) => ({...state, user_token: payload})\n    },\n    {\n        user_token: ''\n    }\n)","import axios from \"axios\";\nimport {actionSetError} from \"./reducers/interface\";\nimport {actionSetUserToken} from \"./reducers/user\";\nimport {apiHost} from \"./config\";\n\nconst server = axios.create({\n    baseURL: apiHost,\n    timeout: 1000,\n});\n\nserver.defaults.headers['user_token'] = localStorage.user_token || '';\n\nconst makeRequest = (configObject) => {\n    return server.request({\n        ...configObject,\n        // data: !!configObject.method ? {\n        //     ...configObject.data,\n        //     user_token: getUserToken(window.store.getState())\n        // } : undefined,\n        // params: !!configObject.method ? configObject.params : {\n        //     ...configObject.params,\n        //     user_token: getUserToken(window.store.getState())\n        // },\n    }).then(r => {\n        console.log('Rquest success', r.data)\n        if (r.data.user_token) {\n            const token = r.data.user_token\n            window.store.dispatch(actionSetUserToken(r.data.user_token))\n            localStorage['user_token'] = token\n\n            server.defaults.headers['user_token'] = token\n        }\n        return r.data.data\n    }).catch(\n        error => {\n            console.log('ERROR OCCUR', error.response)\n            if (error.response.data.error_message)\n                window.store.dispatch(actionSetError(error.response.data.error_message))\n            return Promise.reject(error);\n        }\n    )\n}\n\n\nexport const querySearchCards = (searchString, page) =>\n    makeRequest({\n        url: '/cards/',\n        params: {\n            q: searchString,\n            page\n        }\n    })\n\n\nexport const queryGetCardsType = (queryType, page) =>\n    makeRequest({\n        url: '/cards/',\n        params: {\n            type: queryType,\n            page\n        }\n    })\n\nexport const queryCreateCard = data =>\n    makeRequest({\n        url: '/cards/',\n        method: 'post',\n        data: data\n    })\n\nexport const queryEditCard = data =>\n    makeRequest({\n        url: '/cards/',\n        method: 'put',\n        data: data\n    })\n\nexport const queryDeleteCard = data => makeRequest({\n    url: '/cards/',\n    method: 'delete',\n    data: data\n})\n\nexport const queryCreateLink = data => makeRequest({url: '/links/', method: 'post', data})\nexport const queryEditLink = data => makeRequest({url: '/links/', method: 'put', data})\nexport const queryDeleteLink = data => makeRequest({url: '/links/', method: 'delete', data})\n\nexport const queryCreateComment = data => makeRequest({url: '/comments/', method: 'post', data})\nexport const queryEditComment = data => makeRequest({url: '/comments/', method: 'put', data})\nexport const queryDeleteComment = data => makeRequest({url: '/comments/', method: 'delete', data})\n\n\nexport const queryGetCard = cardID => makeRequest({url: `/cards/${cardID}`})\nexport const querySearchSmallCards = queryString => makeRequest({url: `/cards/?q=${queryString}&type=small`})\nexport const querySearchCategories = queryString => makeRequest({url: `/categories/?q=${queryString}`})\n\nexport const queryToggleCommentLike = id => makeRequest({\n    url: `/marks/`,\n    method: 'post',\n    data: {type: 'like', object: 'comment', id}\n})\nexport const queryToggleCommentDislike = id => makeRequest({\n    url: `/marks/`,\n    method: 'post',\n    data: {type: 'dislike', object: 'comment', id}\n})\nexport const queryToggleCardLike = id => makeRequest({\n    url: `/marks/`,\n    method: 'post',\n    data: {type: 'like', object: 'card', id}\n})\nexport const queryToggleCardDislike = id => makeRequest({\n    url: `/marks/`,\n    method: 'post',\n    data: {type: 'dislike', object: 'card', id}\n})","export const singleCardPrefix = '#'\nexport const pageTitle = 'CN'\n\nexport const version = '1.1'\n\nexport const defaultSearchType = 'popular'\n\nexport let apiHost = 'https://25182.web.hosting-russia.ru'\n\n// if(window.location.hostname === 'localhost'){\n//     apiHost = 'http://localhost:5000'\n// }","import {pageTitle} from \"./config\";\n\nString.prototype.strip = function (substr) {\n    return this.replace(RegExp(`^(${substr})+|(${substr})+$`, 'gm'), \"\");\n};\n\nObject.values = function (o) {\n    return Object.keys(o).map(function (k) {\n        return o[k]\n    })\n};\n\nexport const setURL = (newURL) => {\n    window.history.pushState('page2', pageTitle, `/#/${newURL}`);\n}\n\nexport const actionConsoleLog = payload => {\n    console.log('ACTION PAYLOAD', payload);\n    return payload\n}\n\nexport function openInNewTab(name) {\n    const url = `https://www.google.com/search?q=${name}`\n    const win = window.open(url, '_blank');\n    win.focus();\n}\n\n\nexport const getFirstKey = (obj) => {\n    return Object.values(obj)[0];\n}\n\nexport const beautifyURL = (url, count) => {\n    if (!url)\n        url = ''\n    url = url.replace('https://', '')\n    url = url.replace('http://', '')\n    url = url.replace(/\\/$/, '')\n    url = url.split('/')[0]\n    return url\n}\n\nfunction padStr(i) {\n    return (i < 10) ? \"0\" + i : \"\" + i;\n}\n\nexport function dateToString(temp) {\n    return [\n        padStr(temp.getDate()),\n        padStr(1 + temp.getMonth()),\n        padStr(String(temp.getFullYear()).slice(2))\n    ].join('.')\n}\n\nexport function setCookie(name,value,days) {\n    var expires = \"\";\n    if (days) {\n        var date = new Date();\n        date.setTime(date.getTime() + (days*24*60*60*1000));\n        expires = \"; expires=\" + date.toUTCString();\n    }\n    document.cookie = name + \"=\" + (value || \"\")  + expires + \"; path=/\";\n}\n\n","import {queryGetCard, queryGetCardsType, querySearchCards, querySearchSmallCards} from \"../api\";\nimport {actionCardNotFound, set_cards_action, setHintsCards, setSingleCardData} from \"./cards\";\nimport {createAction, handleActions} from \"redux-actions\";\nimport {defaultSearchType, singleCardPrefix} from \"../config\";\nimport {setURL} from \"../utils\";\n\nexport const searchCardsAction = (searchString, page = 1) => dispatch => {\n    console.log('SEARCH', searchString)\n    if(page === 1)\n        document.documentElement.scrollTop = 0;\n    dispatch(actionSetSearchLine(searchString))\n    if (searchString.startsWith(singleCardPrefix)) {\n        dispatch(actionGetOneCard(searchString.slice(1)))\n    } else if (searchString.startsWith('@')) {\n        dispatch(actionSearchCardsByType(searchString.slice(1), page))\n    } else {\n        if (searchString.length === 0) {\n            dispatch(actionSearchCardsByType(defaultSearchType, page))\n        } else {\n            dispatch(actionSearchCardsByText(searchString, page))\n        }\n    }\n}\n\nexport const actionSearchSingleCard = (cardID) => dispatch => dispatch(searchCardsAction('#' + cardID));\n\n\nexport const actionRefreshSearch = () => (dispatch, getState) => {\n    dispatch(searchCardsAction(getState().search.value))\n}\n\nexport const actionSearchCardsByType = (type, page) => dispatch => {\n    setURL(`?type=${type}`)\n    queryGetCardsType(type, page).then(\n        response => dispatch(set_cards_action(response))\n    )\n}\n\nexport const actionSearchHintsCards = (searchString) => dispatch => {\n    querySearchSmallCards(searchString).then(\n        response => dispatch(setHintsCards(response))\n    )\n}\n\nexport const actionSearchCardsByText = (searchText, page) => dispatch => {\n    setURL(`?q=${searchText}`)\n    querySearchCards(searchText, page).then(\n        response => dispatch(set_cards_action(response))\n    )\n}\n\nexport const actionGetOneCard = (cardID) => dispatch => {\n    setURL(cardID)\n    if (cardID)\n        queryGetCard(cardID).then(\n            response => {\n                console.log(response)\n                document.documentElement.scrollTop = 0;\n                dispatch(setSingleCardData(response))\n            }\n        ).catch(\n            r => {\n                dispatch(actionCardNotFound())\n            }\n        )\n}\n\nexport const actionSetSearchLine = createAction(\"actionSetSearchLine\",)\nexport const initialAction = createAction('initialAction',)\n\n\nexport default handleActions(\n    {\n        actionSetSearchLine: (state, action) => ({...state, value: action.payload}),\n        initialAction: (state) => state,\n    },\n    {value: ''}\n)","import {createAction, handleActions} from \"redux-actions\";\nimport {\n    queryCreateComment,\n    queryDeleteCard,\n    queryDeleteComment,\n    queryEditComment,\n    queryToggleCardDislike,\n    queryToggleCardLike, queryToggleCommentDislike, queryToggleCommentLike\n} from \"../api\";\nimport {actionRefreshSearch} from \"./search\";\nimport {getCurrentCardId} from \"../selectors\";\n\nexport const set_cards_action = createAction('set_cards_action');\nexport const setSingleCardData = createAction('setSingleCardData');\nexport const setHintsCards = createAction('setHintsCards');\nexport const actionSetOpenCreateCard = createAction('actionSetOpenCreateCard')\nexport const actionCardNotFound = createAction('actionCardNotFound')\n\nexport const actionLikeComment = (id) => dispatch => {\n    queryToggleCommentLike(id).then(\n        r => dispatch(actionRefreshSearch())\n    )\n}\n\nexport const actionDislikeComment = (id) => dispatch => {\n    queryToggleCommentDislike(id).then(\n        r => dispatch(actionRefreshSearch())\n    )\n}\n\nexport const actionCreateComment = (data) => (dispatch, getState) => {\n    queryCreateComment({...data, card_id: getCurrentCardId(getState())}).then(r => {\n        dispatch(actionRefreshSearch())\n    })\n}\nexport const actionDeleteComment = (data) => (dispatch) => {\n    queryDeleteComment(data).then(r => {\n        dispatch(actionRefreshSearch())\n    })\n}\nexport const actionEditComment = (data) => (dispatch) => {\n    queryEditComment(data).then(r => {\n        dispatch(actionRefreshSearch())\n    })\n}\n\nexport const actionLikeCard = (id) => (dispatch) => {\n    queryToggleCardLike(id).then(r => {\n        dispatch(actionRefreshSearch())\n    })\n}\nexport const actionDislikeCard = (id) => (dispatch) => {\n    queryToggleCardDislike(id).then(r => {\n        dispatch(actionRefreshSearch())\n    })\n}\n\nexport const deleteCardAction = (id) => (dispatch, getState) => {\n    queryDeleteCard({id}).then(\n        r => {\n            dispatch(actionRefreshSearch())\n        }\n    )\n}\n\nconst concat_unique_by_id = (array, additionalArray) => {\n    const ids = new Set();\n    for (let elem of array)\n        ids.add(elem.id)\n\n    for (let elem of additionalArray) {\n        if (!ids.has(elem.id)) {\n            array.push(elem)\n        }\n    }\n    return array;\n};\n\n\nexport default handleActions(\n    {\n        set_cards_action:\n            (state, action) => {\n                if (action.payload.page === 1)\n                    return {\n                        ...state,\n                        card: undefined,\n                        items: action.payload.cards,\n                        more: action.payload.more,\n                        initial: true,\n                        page: 1,\n                    }\n                return {\n                    ...state,\n                    card: undefined,\n                    items: concat_unique_by_id(state.items, action.payload.cards),\n                    more: action.payload.more,\n                    page: action.payload.page,\n                    initial: false\n                }\n            },\n        actionSetOpenCreateCard: (state, {payload}) => ({...state, openedCreateCard: payload}),\n        setHintsCards: (state, {payload}) => ({...state, hintsCards: payload.cards}),\n        setSingleCardData: (state, {payload}) => (\n            {\n                ...state,\n                ...payload,\n                history: [payload.card, ...state.history.filter(card => card.id !== payload.card.id)]\n            }\n        ),\n        actionCardNotFound: (state) => ({\n            ...state,\n            items: [],\n            card: undefined,\n            more: false,\n        })\n    },\n    {\n        items: [],\n        openedCreateCard: false,\n        page: 1,\n        more: false,\n        hintsCards: [],\n        card: undefined,\n        comments: [],\n        history: [],\n        utility_cards: {\n            parents: []\n        },\n        controls: {\n            liked: false,\n            disliked: false,\n        }\n    }\n)","import {createAction, handleActions} from \"redux-actions\";\nimport {queryCreateLink, queryDeleteLink, queryEditLink, querySearchCategories} from \"../api\";\nimport {actionRefreshSearch} from \"./search\";\nimport {actionRequestError} from \"./interface\";\n\n\nexport const actionSetCategoriesHints = createAction('actionSetCategoriesHints')\n\nexport const actionCreateLink = (data) => dispatch => {\n    queryCreateLink(data).then(r => {\n            dispatch(actionRefreshSearch())\n        }\n    )\n}\n\nexport const actionEditLink = (data) => dispatch => {\n    queryEditLink(data).then(r => {\n        dispatch(actionRefreshSearch())\n    }).catch(r => dispatch(actionRequestError('Что-то пошло не так')))\n}\n\nexport const actionDeleteLink = (data) => dispatch => {\n    queryDeleteLink(data).then(r => {\n        dispatch(actionRefreshSearch())\n    })\n}\n\nexport const actionSearchCategories = (queryString) => dispatch => {\n    querySearchCategories(queryString).then(\n        r => dispatch(actionSetCategoriesHints(r))\n    )\n}\n\n\nexport default handleActions(\n    {\n        actionSetCategoriesHints: (state, {payload}) => {\n            return {\n                ...state,\n                hintsCategories: payload\n            }\n        }\n\n    }, {\n        hintsCategories: []\n    }\n)","import {createAction, handleActions} from \"redux-actions\";\nimport {queryCreateCard, queryEditCard} from \"../api\";\nimport {actionRefreshSearch, searchCardsAction} from \"./search\";\nimport {actionSetOpenCreateCard} from \"./cards\";\nimport {actionConsoleLog} from \"../utils\";\n\n\nexport const actionSetOpenEdictCard = createAction('actionSetOpenEdictCard', actionConsoleLog)\nexport const actionSetEditInitialValues = createAction('actionSetEditInitialValues')\n\nexport const actionOpenEditCard = (cardValues) => dispatch => {\n    dispatch(actionSetEditInitialValues(cardValues))\n    dispatch(actionSetOpenEdictCard(true))\n}\n\nexport const editCardAction = (card, values) => dispatch => {\n    const newCard = {\n        ...card,\n        ...values\n    }\n    queryEditCard(newCard).then(r => {\n        dispatch(searchCardsAction('#' + card.id))\n        dispatch(actionSetOpenEdictCard(false))\n    });\n}\n\nexport const createCardAction = (values) => dispatch => {\n    queryCreateCard(values).then(r => {\n        dispatch(searchCardsAction('#' + r.id))\n        dispatch(actionSetOpenCreateCard(false))\n    });\n}\n\nexport default handleActions(\n    {\n        actionSetOpenEdictCard: (state, {payload}) => ({...state, openedEditCard: payload}),\n        actionSetEditInitialValues: (state, {payload}) => ({...state, card: payload}),\n\n    }, {\n        openedEditCard: false,\n        card: {\n\n        }\n    }\n)","import {combineReducers} from \"redux\";\nimport cardsReducer from './reducers/cards';\nimport searchReducer from './reducers/search';\nimport linksReducer from './reducers/links';\nimport editCardReducer from './reducers/editCard';\nimport interfaceReducer from './reducers/interface';\nimport userReducer from './reducers/user';\nimport { reducer as formReducer } from 'redux-form';\n\n\nexport default combineReducers({\n    form: formReducer,\n    user: userReducer,\n    cards: cardsReducer,\n    search: searchReducer,\n    editCard: editCardReducer,\n    links: linksReducer,\n    interface: interfaceReducer\n})","import {applyMiddleware, createStore} from 'redux'\nimport rootReducer from './reducers'\nimport thunk from \"redux-thunk\";\n\nimport { persistStore, persistReducer } from 'redux-persist'\nimport storage from 'redux-persist/lib/storage' // defaults to localStorage for web\n\n\nconst persistConfig = {\n    key: 'root',\n    storage,\n}\nconst persistedReducer = persistReducer(persistConfig, rootReducer)\n\n\nlet store = createStore(persistedReducer, applyMiddleware(thunk))\nwindow.store = store;\nexport const persistor = persistStore(store)\n\nexport default store;","import React from 'react';\n\n\nconst SearchControl = props => {\n    const value = props.value;\n    const iconName = (value.length === 0) ? 'fa-search' : 'fa-times mr-1';\n    return (\n        <div className={\"search \" + props.className} style={{position: 'relative', width: '100%', ...props.style}}>\n\n            <input autoComplete=\"off\" name={props.name} onChange={props.onChange} value={value} className=\"form-control\"\n                   type=\"text\"\n                   placeholder=\"Найти карточку\" aria-label=\"Search\"/>\n            <i style={{right: '0.6rem', top: '0.6rem', position: 'absolute'}} className={\"search-icon fal \" + iconName}\n               aria-hidden=\"true\" onClick={() => {\n                value.length > 0 && props.onChange({target: {name: props.name, value: ''}})\n            }}/>\n        </div>\n    )\n}\n\nexport default SearchControl;","import React, {useState} from 'react';\nimport {connect} from \"react-redux\";\nimport {searchCardsAction} from \"../store/reducers/search\";\n\n\nexport const SmallCard = props => {\n\n    const [openComment, setOpenComment] = useState(false);\n\n    let commentIcon = 'fa-chevron-down';\n    if (openComment) {\n        commentIcon = 'fa-chevron-up';\n    }\n    let activeClass = '';\n    if(props.active)\n        activeClass = '_activeBlock'\n\n    return (\n        <div className={\"_smallCard _block p-2 d-flex mr-2 mt-2 \" + activeClass} style={{\n            // maxWidth: '32%'\n            userSelect: \"none\",\n        }}\n             onClick={props.onClick}\n        >\n            <div className=\"\">\n                <div className={'d-flex align-items-center '}>\n                    {\n                        props.card.img &&\n                        <div className=\"small-card-img mr-2\"\n                             style={{\n                                 backgroundImage: `url(${props.card.img})`,\n                                 width: '30px',\n                                 height: '30px'\n                             }\n                             }/>\n                    }\n                    <div className=\"text-left\">\n                        {props.card.name}\n                    </div>\n                    {\n                        props.card.comment &&\n                        <div style={{fontSize: '0.8em'}} className={'text-left text-muted ml-3 text-center'}>\n                            {props.card.comment}\n                        </div>\n                    }\n                </div>\n            </div>\n        </div>\n    )\n}\n\nconst SmallCards = props => {\n\n    return (\n        <div className=\"d-flex flex-wrap\">\n            {props.children}\n        </div>\n    )\n}\n\nexport default SmallCards;","import React from 'react';\nimport {Form} from 'react-bootstrap'\nimport {getFirstKey} from \"../store/utils\";\n\n\nexport const FormikErrorMessage = ({formik}) => {\n    return (\n        <>\n            {\n                formik.submitCount > 0 &&\n                <ErrorLine error={getFirstKey(formik.errors)}/>\n            }\n        </>\n    )\n}\n\nconst ErrorLine = ({error}) => {\n    return (\n        <>\n            {\n                !!error &&\n                <Form.Label className={'border rounded border-danger w-100 p-1 text-danger'}>\n                    {error}\n                </Form.Label>\n            }\n        </>\n    )\n}\n\nexport default ErrorLine;","import React, {useEffect, useState} from 'react';\nimport {ButtonGroup, Button, Form, Modal} from \"react-bootstrap\";\nimport SearchControl from \"./components/SearchControl\";\nimport {connect} from \"react-redux\";\nimport {actionSearchHintsCards} from \"./store/reducers/search\";\nimport SmallCards, {SmallCard} from \"./components/SmallCards\";\nimport {actionCreateLink, actionDeleteLink, actionEditLink, actionSearchCategories} from \"./store/reducers/links\";\nimport {useFormik} from \"formik\";\nimport {FormikErrorMessage} from \"./components/ErrorLine\";\n\n\nexport const SmallCardsList = ({hints, active, onCardClick, ...props}) => {\n    return (\n        <SmallCards>\n            {\n                !!hints &&\n                hints.map(\n                    card => <SmallCard active={active === card.id} card={card}\n                                       onClick={() => onCardClick && onCardClick(card.id)}/>\n                )\n            }\n        </SmallCards>\n    )\n}\n\nlet CardSearch = ({onChange, name, value, cardHints, ...props}) => {\n    const formik = useFormik({\n        initialValues: {\n            search: ''\n        },\n        onSubmit: () => {\n        }\n    })\n    let hints = props.hints;\n    if (cardHints) {\n        hints = cardHints\n        if (formik.values.search) {\n            hints = hints.filter(hint => hint.name.includes(formik.values.search))\n        }\n    }\n\n    return (\n        <Form.Group>\n            <Form.Label>Название карточки</Form.Label>\n            <SearchControl {...formik.getFieldProps('search')} onChange={e => {\n                formik.getFieldProps('search').onChange(e)\n                props.actionSearchHintsCards(e.target.value);\n            }}/>\n            <SmallCardsList hints={hints} active={value} onCardClick={(id) => onChange({\n                target: {\n                    name,\n                    value: id\n                }\n            })}/>\n        </Form.Group>\n    )\n}\nCardSearch = connect(\n    state => (\n        {\n            hints: state.cards.hintsCards,\n        }\n    ),\n    {\n        actionSearchHintsCards\n    })(CardSearch);\n\nlet CategorySearch = ({hints, categoryIdProps, categoryNameProps, categoryDescProps, ...props}) => {\n    useEffect(() => {\n        props.actionSearchCategories(categoryNameProps.value)\n    }, [categoryNameProps.value])\n    return (\n        <Form.Group>\n            <Form.Label>В какую категорию</Form.Label>\n            <SearchControl {...categoryNameProps} onChange={e => {\n                categoryNameProps.onChange(e)\n                categoryIdProps.onChange({target: {name: categoryIdProps.name, value: ''}})\n            }}/>\n            <div>\n                {\n                    hints.map(\n                        category => <SmallCard active={categoryIdProps.value === category.id}\n                                               card={{...category, comment: category.desc}}\n                                               onClick={() => {\n                                                   categoryIdProps.onChange({\n                                                       target: {\n                                                           name: categoryIdProps.name,\n                                                           value: category.id\n                                                       }\n                                                   })\n                                               }}/>\n                    )\n                }\n                {\n                    categoryNameProps.value.length > 0 &&\n                    <>\n                        <Form.Text className={'text-muted'}>Если существующие категории не подходят,\n                            заполните поле описания, чтобы создать новую. В поле поиска категории напишите желаемое\n                            название полностью</Form.Text>\n                        <Form.Control type={'text'} {...categoryDescProps}\n                                      autoComplete=\"off\"\n                                      onChange={e => {\n                                          categoryIdProps.onChange({target: {name: categoryIdProps.name, value: ''}});\n                                          categoryDescProps.onChange(e);\n                                      }\n                                      }\n                                      placeholder={'Описание для новой категории. ВАЖНО - только если нету подходящих'}/>\n                    </>\n                }\n            </div>\n        </Form.Group>\n    )\n}\n\nCategorySearch = connect(\n    state => (\n        {\n            hints: state.links.hintsCategories,\n        }\n    ),\n    {\n        actionSearchCategories\n    })(CategorySearch);\n\nconst LinkDescription = ({name, value, onChange, ...props}) => {\n    return (\n        <Form.Group>\n            <Form.Label>Описание связи</Form.Label>\n            <Form.Control autoComplete=\"off\" name={name} value={value} onChange={onChange} type={'text'}\n                          placeholder={'Не обязательно'}/>\n            <Form.Text className={'text-muted'}>Как связана карточка и добавленная вами зависимость\n                (коротко)</Form.Text>\n        </Form.Group>\n    )\n}\n\n\nlet AddLinkPage = props => {\n    const [activeMenu, setActiveMenuHook] = useState('create');\n    const validate = values => {\n        let errors = {}\n        if (activeMenu === \"create\") {\n            if (!values.target_id) errors.target_id = 'Выбирите карточку'\n            if (!values.category_name) errors.category_name = 'Выбирите категорию'\n            if (!values.category_id && !values.category_desc) errors.category_id = 'Найдите категорию или укажите описание для создания новой'\n        } else if (activeMenu === 'edit') {\n            if (!values.link_id) errors.link_id = 'Выбирите ссылку, которую хотите редактировать'\n            if (!values.category_id && !values.category_desc) errors.category_id = 'Найдите категорию или укажите описание для создания новой'\n        } else if (activeMenu === 'delete') {\n            if (!values.link_id) errors.link_id = 'Выбирите ссылку, которую хотите удалить'\n        }\n        return errors;\n    }\n\n    const formik = useFormik({\n        initialValues: {\n            link_id: '',\n            target_id: '',\n            category_id: '',\n            category_name: '',\n            category_desc: '',\n            link_desc: ''\n        },\n        validate,\n        onSubmit: values => {\n            if (activeMenu === 'delete') {\n                props.actionDeleteLink({id: values.link_id})\n            } else if (activeMenu === 'edit') {\n                props.actionEditLink({\n                    id: values.link_id,\n                    desc: values.link_desc,\n                    category_name: values.category_name,\n                    category_desc: values.category_desc,\n                    category_id: values.category_id,\n                })\n            } else if (activeMenu === 'create') {\n                props.actionCreateLink({\n                    source_id: props.card.id,\n                    target_id: values.target_id,\n                    desc: values.link_desc,\n                    category_name: values.category_name,\n                    category_desc: values.category_desc,\n                    category_id: values.category_id,\n                })\n            }\n            props.handleClose()\n        },\n    });\n    console.log('values', formik.values)\n    const setActiveMenu = (menu) => {\n        setActiveMenuHook(menu);\n        formik.handleReset(undefined);\n    }\n\n    const menuVariant = menuName => {\n        return menuName === activeMenu ? 'info' : 'outline-info'\n    }\n    let title = '';\n    let submitName = ''\n\n    if (activeMenu === 'create') {\n        title = 'Добавить зависимость карточке';\n        submitName = 'Добавить';\n    } else if (activeMenu === 'edit') {\n        title = 'Изменить зависимость от карточки';\n        submitName = 'Редактировать';\n    } else if (activeMenu === 'delete') {\n        title = 'Удалить зависимость карточки';\n        submitName = 'Удалить';\n    }\n\n    let cardLinks = []\n    for (let category of props.card.categories) {\n        cardLinks = cardLinks.concat(category.cards)\n    }\n\n    return (\n        <Modal\n            show={true}\n            onHide={props.handleClose}\n            size=\"lg\"\n            aria-labelledby=\"contained-modal-title-vcenter\"\n            centered\n            backdrop={'static'}\n        >\n            <Modal.Header closeButton>\n                <Modal.Title>{title} {props.card.name}</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <ButtonGroup className={'mb-2 d-flex'} fluid>\n                    <Button variant={menuVariant('create')} onClick={() => setActiveMenu('create')}>Создать\n                        зависимость</Button>\n                    <Button variant={menuVariant('edit')} onClick={() => {\n                        setActiveMenu('edit')\n                    }}>Редактировать\n                        зависимость</Button>\n                    <Button variant={menuVariant('delete')} onClick={() => setActiveMenu('delete')}>Удалить\n                        зависимость</Button>\n                </ButtonGroup>\n\n                <Form>\n                    <FormikErrorMessage formik={formik}/>\n                    {\n                        activeMenu === 'create' &&\n                        <>\n                            <CardSearch {...formik.getFieldProps('target_id')}/>\n                            <CategorySearch\n                                categoryIdProps={formik.getFieldProps('category_id')}\n                                categoryNameProps={formik.getFieldProps('category_name')}\n                                categoryDescProps={formik.getFieldProps('category_desc')}/>\n                            <LinkDescription {...formik.getFieldProps('link_desc')}/>\n                        </>\n                    }\n                    {\n                        activeMenu === 'edit' &&\n                        <>\n                            <CardSearch cardHints={cardLinks} {...formik.getFieldProps('link_id')}\n                                        onChange={e => {\n                                            formik.handleChange(e);\n                                            const link = cardLinks.find(link => link.id === e.target.value);\n                                            formik.handleChange({\n                                                target: {\n                                                    name: 'link_desc',\n                                                    value: link.comment\n                                                }\n                                            });\n                                            formik.handleChange({\n                                                target: {\n                                                    name: 'category_id',\n                                                    value: link.category_id\n                                                }\n                                            });\n                                            formik.handleChange({\n                                                target: {\n                                                    name: 'category_name',\n                                                    value: link.category_name\n                                                }\n                                            });\n                                        }\n                                        }/>\n                            <CategorySearch\n                                categoryIdProps={formik.getFieldProps('category_id')}\n                                categoryNameProps={formik.getFieldProps('category_name')}\n                                categoryDescProps={formik.getFieldProps('category_desc')}/>\n                            <LinkDescription {...formik.getFieldProps('link_desc')}/>\n                        </>\n                    }\n                    {\n                        activeMenu === 'delete' &&\n                        <CardSearch cardHints={cardLinks} {...formik.getFieldProps('link_id')}/>\n                    }\n                </Form>\n            </Modal.Body>\n            <Modal.Footer>\n                <Button variant=\"primary\" onClick={formik.handleSubmit}>\n                    {submitName}\n                </Button>\n            </Modal.Footer>\n        </Modal>\n    );\n}\n\nexport default connect(state => ({}), {\n    actionCreateLink,\n    actionEditLink,\n    actionDeleteLink,\n})(AddLinkPage)","import React from 'react';\n\n\nconst Image = ({img, className, size, style, ...props}) => {\n    if (!size) size = 20\n    size = size + 'px'\n    return (\n        <div {...props} className={\"_img-container \" + className}\n             style={{backgroundImage: `url(${img})`, width: size, height: size, ...style}}/>\n    )\n}\n\nexport default Image;","import React from 'react';\nimport {beautifyURL} from \"../store/utils\";\n\n\nconst toLink = (url, name, blank = true) => {\n    console.log(url, name)\n    if (!name) name = beautifyURL(url)\n    let attrs = ''\n    if(url.startsWith('#') || url.startsWith('/')){\n        return `<a href=${'/' + url.slice(1)}>${name}</a>`\n    }\n    if (blank) attrs += 'target=\"_blank\"'\n    return `<a ${attrs} href=${url}>${name}</a>`\n}\n\nconst TextRenderer = ({children, ...props}) => {\n    let text = children;\n    text = ' ' + text\n    const textPatternsReplaceList = [\n        [/\"\"\"([^\"]+)\"\"\"/, (match, str) => `<b>${str}</b>`],\n        [/\\[([^|]+)\\|([^\\]]+)]/gm, (match, url, name) => toLink(url, name, true)],\n        [/(\\s)(https?:\\/\\/\\S+)/gm, (match, space, url) => space + toLink(url)],\n        [/(\\s)(\\/\\S+)/gm, (match, space, url) => space + toLink(url, '#' + url.slice(1))],\n        [/(\\s)(#\\S+)/gm, (match, space, url) => space + toLink('/' + url.slice(1), '#' + url.slice(1))],\n        ['\\n', \"<br/>\"],\n\n    ]\n    for (let pair of textPatternsReplaceList) {\n        text = text.replace(pair[0], pair[1])\n    }\n    return (\n        <div {...props} dangerouslySetInnerHTML={{__html: text}}>\n        </div>\n    )\n}\n\nexport default TextRenderer;","import React, {useEffect, useState} from 'react';\nimport {connect} from \"react-redux\";\nimport {deleteCardAction} from \"./store/reducers/cards\";\nimport {actionOpenEditCard} from \"./store/reducers/editCard\";\nimport AddLinkPage from \"./AddLink\";\nimport SmallCards, {SmallCard} from \"./components/SmallCards\";\nimport {searchCardsAction} from \"./store/reducers/search\";\nimport {beautifyURL, openInNewTab} from \"./store/utils\";\nimport cn from 'classnames';\nimport Image from \"./components/Image\";\nimport TextRenderer from \"./components/TextRenderer\";\n\n\nconst BigCard = props => {\n\n    const [showAddLink, setShowAddLink] = useState(false);\n    const [activeCategory, setActiveCategory] = useState(undefined);\n    let categories = []\n    if (props.card.categories)\n        categories = props.card.categories;\n\n    useEffect(() => {\n        if (categories.length > 0) {\n            setActiveCategory(categories[0].id)\n        }\n    }, [categories])\n\n\n    let urlsList = []\n    if (props.card.urls)\n        urlsList = props.card.urls.split(',')\n\n    const clickEditCard = () => {\n        props.actionOpenEditCard(props.card)\n    }\n    const activeCategoryObject = categories.find(x => x.id === activeCategory)\n    return (\n        <div className={\"border p-3 _bigcard \" + cn({'mb-4': !props.bottom})}>\n            {\n                showAddLink &&\n                <AddLinkPage card={props.card} handleClose={() => setShowAddLink(false)}/>\n            }\n            <div className=\"d-flex\">\n                {\n                    props.card.img &&\n                    <Image img={props.card.img} size={150} className={'mr-3'}/>\n                }\n                <div className=\"col pl-0 pr-0 d-flex flex-column\">\n                    <div className=\"d-flex align-items-start\">\n                        <h3 style={{cursor: 'default'}} onClick={() => props.searchCardsAction('#' + props.card.id)}\n                            className=\"text-left\">{props.card.name}</h3>\n                        <div className=\"ml-auto d-inline-flex pt-2\">\n                            {/*<i className=\"card-icon fal fa-share\"/>*/}\n                            <i className=\"card-icon fal fa-search\" onClick={() => openInNewTab(props.card.name)}/>\n                            <i className=\"card-icon fal fa-pen\" onClick={clickEditCard}/>\n                            <i className=\"card-icon fal fa-link\" onClick={() => setShowAddLink(true)}/>\n                        </div>\n                    </div>\n                    <TextRenderer className=\"mb-auto text-left\">\n                        {props.card.desc}\n                    </TextRenderer>\n                    <div className=\"d-flex justify-content-start flex-wrap\">\n                        {urlsList.map(url =>\n                            <a key={url} href={url} target=\"_blank\"\n                               className=\"text-left mr-4\">{beautifyURL(url, urlsList.length)}</a>\n                        )}\n\n                    </div>\n\n                </div>\n            </div>\n            {\n                categories.length > 0 &&\n                <>\n                    <div className=\"d-flex flex-wrap align-items-between mt-2\">\n                        {\n                            categories.map(\n                                cat => <button\n                                    key={cat.id}\n                                    onClick={() => setActiveCategory(cat.id)}\n                                    className={\"btn btn-outline-info mr-2 py-1 mb-1 \" + (cat.id === activeCategory && 'active')}>{cat.name}</button>\n                            )\n                        }\n                    </div>\n                    <SmallCards>\n                        {\n                            activeCategoryObject &&\n                            activeCategoryObject.cards.map(\n                                card => <SmallCard key={card.id} card={card}\n                                                   onClick={() => props.searchCardsAction('#' + card.target_id)}/>\n                            )\n                        }\n                    </SmallCards>\n                </>\n            }\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({})\nconst dispatchToProps = ({\n    deleteCardAction,\n    actionOpenEditCard,\n    searchCardsAction\n})\n\nexport default connect(mapStateToProps, dispatchToProps)(BigCard)","import React from 'react';\nimport {Link} from \"react-router-dom\";\n\n\nconst CircleIconButton = props => {\n\n    return (\n        <div className={'mb-4 mainPageLeftIcon'} {...props} style={{textDecoration: 'none', color: 'black'}}>\n            <i className={props.icon + \" mb-1 left-panel-icon\"} style={{fontSize: '3em'}}/>\n            <div style={{lineHeight: '1.2em'}}>{props.name}</div>\n        </div>\n    )\n}\n\nexport {CircleIconButton}","import React from 'react';\nimport SearchControl from \"./components/SearchControl\";\nimport {connect} from \"react-redux\";\nimport {actionSetSearchLine, searchCardsAction} from \"./store/reducers/search\";\n\n\nconst MainSearchLine = props => {\n\n    const onChange = e => {\n        document.documentElement.scrollTop = 0;\n\n        props.searchCardsAction(e.target.value)\n    }\n\n    return (\n        <SearchControl value={props.value} name={'search'}\n                       className={'main-search'} style={{width: '70%'}} onChange={onChange}/>\n    )\n}\n\nconst mapStateToProps = state => ({\n    value: state.search.value\n})\n\nexport default connect(mapStateToProps, {searchCardsAction})(MainSearchLine);","import React, {useState} from 'react';\nimport {Row, Col, Form, Button} from 'react-bootstrap';\nimport TextareaAutosize from \"react-autosize-textarea\";\n\n\nexport const AutoTextareaControl = ({style, ...props}) => {\n    return (\n        <ControlWithIcon {...props} type={'text'} as={TextareaAutosize}/>\n    )\n}\n\nconst ControlWithIcon = ({iconClass, showIcon, buttonVariant, onIconClick, ...props}) => {\n    if (showIcon === undefined)\n        showIcon = props.value.length > 0\n    if (!buttonVariant)\n        buttonVariant = 'outline-primary'\n\n    return (\n        <Row>\n            <Col>\n                <Form.Control {...props} autoComplete='off'/>\n            </Col>\n            {\n                showIcon &&\n                <Col md={'auto'} className={'pl-0 d-flex flex-stretch'}>\n                    <Button variant={buttonVariant} onClick={onIconClick}>\n                        <i className={iconClass} style={{}}/>\n                    </Button>\n                </Col>\n            }\n        </Row>\n    )\n}\n\nexport default ControlWithIcon;","import React from 'react';\nimport {Form} from \"react-bootstrap\";\n\n\nexport const TextMuted = ({children, className, ...props}) => {\n\n    return (\n        <Form.Text {...props} className={\"text-muted \" + className}>{children}</Form.Text>\n    )\n}","import React, {useEffect, useState} from 'react';\nimport {Button, Col, Form, Modal, Row} from \"react-bootstrap\";\nimport {openInNewTab} from \"./store/utils\";\nimport Image from \"./components/Image\";\nimport {connect} from \"react-redux\";\nimport {useFormik} from \"formik\";\nimport * as yup from \"yup\";\nimport ErrorLine, {FormikErrorMessage} from \"./components/ErrorLine\";\nimport ControlWithIcon from \"./components/ControlWithIcon\";\nimport {TextMuted} from \"./components/FormUtils\";\nimport {SmallCardsList} from \"./AddLink\";\nimport {actionSearchHintsCards} from \"./store/reducers/search\";\n\n\nconst FormControl = props => {\n    return <Form.Control {...props} autoComplete=\"off\"/>\n}\n\nconst UrlsList = ({value, onChange, name, ...props}) => {\n    let urls = value.strip(',').split(',')\n\n    const customOnChange = e => {\n        urls[Number(e.target.name)] = e.target.value\n        urls = urls.filter(url => !!url)\n        onChange({target: {name, value: urls.join(',')}})\n    }\n    if (!!urls[0])\n        urls.push('')\n\n    return (\n        <>\n            {\n\n                urls.map((url, id) => (\n                    <FormControl type=\"url\"\n                                 onChange={customOnChange}\n                                 name={id}\n                                 key={id}\n                                 value={url}\n                                 className={'mb-2'}\n                                 placeholder={\"Вставте ссылку на подходящую страницу\"}/>\n                ))\n            }\n        </>\n    )\n}\n\n\nconst EditCard = ({hints, ...props}) => {\n    const formik = useFormik({\n        initialValues: props.initialValues || {\n            name: '',\n            desc: '',\n            img: '',\n            urls: ''\n        },\n        validationSchema: yup.object({\n            name: yup.string().max(100, 'Слишком длинное название').required('Введите название карточки'),\n            desc: yup.string().max(800, 'Слишком длинное описание (максимум 800 символов)'),\n            img: yup.string().max(1000, 'Вы уверенны что вставили валидную ссылку на изображение? Она слишком длинная'),\n            urls: yup.string()\n        }),\n        onSubmit: values => {\n            props.handleSave(values)\n        }\n    })\n    useEffect(() => {\n        props.actionSearchHintsCards(formik.values.name)\n    }, [formik.values.name])\n    return (\n        <Modal\n            show={true}\n            onHide={props.handleClose}\n            size=\"lg\"\n            aria-labelledby=\"contained-modal-title-vcenter\"\n            centered\n            backdrop={'static'}\n        >\n            <Modal.Header closeButton>\n                <Modal.Title>{props.title}</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <Form>\n                    <FormikErrorMessage formik={formik}/>\n                    <Form.Group controlId=\"name\">\n                        <Form.Label>Название</Form.Label>\n                        <ControlWithIcon {...formik.getFieldProps('name')} iconClass={'fab fa-google'}\n                                         placeholder=\"Введите название\"\n                                         onIconClick={() => openInNewTab(formik.values.name)}/>\n\n                        <TextMuted>Название должно отражать суть понятия, быть лаконичным,\n                            желательно состоять из одного слова</TextMuted>\n\n                        <SmallCardsList hints={hints}/>\n                    </Form.Group>\n\n\n                    <Form.Group controlId=\"desc\">\n                        <Form.Label>Описание</Form.Label>\n                        <FormControl {...formik.getFieldProps('desc')} onChange={e => {\n                            formik.setFieldValue('desc', e.target.value.strip('Описание'))\n                        }} as='textarea' rows={5}\n                                     placeholder=\"Напишите описание\"/>\n                        <TextMuted>Часто хорошее описание можно найти в подсказке гугла или в\n                            первом абзаце википедии. Желательно не более 300 символов</TextMuted>\n                    </Form.Group>\n\n                    <Form.Group controlId=\"img\">\n                        <Row>\n                            <Col>\n                                <Form.Label>Ссылка на изображение</Form.Label>\n                                <FormControl {...formik.getFieldProps('img')} type=\"text\"\n                                             placeholder=\"Вставте прямую ссылку на картинку\"/>\n                                <TextMuted>Если у вас изображение на компьютере, загрузите его на\n                                    любой\n                                    хостинг (catbox.moe, freeimage.host, img.techpowerup.org) и вставте сюда ПРЯМУЮ\n                                    ссылку</TextMuted>\n                            </Col>\n                            {\n                                !!formik.values.img &&\n                                <Col md={'auto pl-0'}>\n                                    <Image size={130} img={formik.values.img}/>\n                                </Col>\n                            }\n                        </Row>\n                    </Form.Group>\n                    <Form.Group controlId=\"url\">\n                        <Form.Label>Ссылка на сайт</Form.Label>\n                        <UrlsList {...formik.getFieldProps('urls')} type=\"url\"\n                                  placeholder=\"Вставте ссылку на подходящую страницу\"/>\n                        <TextMuted>Ссылка на сайт продукта, технологии или на статью по теме</TextMuted>\n                    </Form.Group>\n                </Form>\n            </Modal.Body>\n            <Modal.Footer>\n                {\n                    props.initialValues &&\n                    <Button variant=\"danger\" onClick={props.handleDelete}>Удалить карточку</Button>\n                }\n                <Button variant=\"secondary\" onClick={props.handleClose}>\n                    Закрыть\n                </Button>\n                <Button variant=\"primary\" onClick={formik.handleSubmit}>\n                    Сохранить\n                </Button>\n            </Modal.Footer>\n        </Modal>\n    );\n}\n\nexport default connect(state => ({\n    hints: state.cards.hintsCards,\n}), {\n    actionSearchHintsCards\n})(EditCard)","import React from 'react';\nimport EditCard from \"./EditCard\";\nimport {connect} from \"react-redux\";\nimport {createCardAction} from \"./store/reducers/editCard\";\n\n\nconst NewCard = props => {\n\n    return (\n        <EditCard handleClose={props.handleClose} title={'Новая карточка'} handleSave={props.createCardAction}/>\n    )\n}\n\nconst mapStateToProps = state => {\n\n}\n\nconst mapDispatchToProps = {\n    createCardAction: createCardAction\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NewCard);","import React from 'react';\n\n\nconst ShowMore = props => {\n\n    return (\n        <div className={'d-flex justify-content-center mb-3'}>\n            <div {...props} className={'_showMore d-flex align-items-center justify-content-center'}>\n                Показать еще\n            </div>\n        </div>\n    )\n}\n\nexport default ShowMore;","import React from 'react';\nimport {Button, Modal} from \"react-bootstrap\";\nimport {connect} from \"react-redux\";\nimport {actionCloseError} from \"../store/reducers/interface\";\n\n\nconst ErrorMessage = ({handleClose, title, message}) => {\n\n    return (\n        <Modal show={title !== undefined} onHide={handleClose} error>\n            <Modal.Header closeButton>\n                <Modal.Title>{title}</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>{message}</Modal.Body>\n            <Modal.Footer>\n                <Button variant=\"primary\" onClick={handleClose}>\n                    Ясно\n                </Button>\n            </Modal.Footer>\n        </Modal>\n    )\n}\n\nexport default connect(state => ({\n    title: state.interface.error.title,\n    message: state.interface.error.message,\n}), {\n    handleClose: actionCloseError,\n})(ErrorMessage);","import React from \"react\";\nimport cn from 'classnames'\n\nexport const Icon = ({icon, active, size, selectable, ...props}) => {\n    if (!size) size = '1.2em'\n\n    return <i className={icon + cn({' _selectable-icon': selectable}) + cn({' _active-icon': active})}\n              style={{fontSize: size}} {...props}/>\n}\n\nexport const StatisticItem = ({icon, text, className, textGap, ...props}) => {\n    if (!textGap) textGap = 2\n    if (text === undefined) text = ''\n    text = String(text)\n    return (\n        <div className={'d-flex align-items-center ' + className}>\n            <Icon icon={icon} {...props}/>\n            {\n                !!text.length &&\n                <div className={'ml-' + textGap}>\n                    {text}\n                </div>\n            }\n        </div>\n    )\n}","import React, {useState} from 'react';\nimport {Card, Form} from 'react-bootstrap';\nimport {useFormik, yupToFormErrors} from \"formik\";\nimport {connect} from \"react-redux\";\nimport {\n    actionCreateComment,\n    actionDeleteComment,\n    actionDislikeComment,\n    actionEditComment,\n    actionLikeComment\n} from \"../store/reducers/cards\";\nimport ControlWithIcon, {AutoTextareaControl} from \"./ControlWithIcon\";\nimport {StatisticItem} from \"./IconElements\";\nimport TextRenderer from \"./TextRenderer\";\nimport * as yup from 'yup'\nimport TextareaAutosize from \"react-autosize-textarea\";\n\nconst CommentControl = ({icon, ...props}) => {\n    return (\n        <StatisticItem selectable textGap={1} icon={'fal ' + icon} className={'mr-3'} size={'1em'} {...props}/>\n    )\n}\n\nconst OneComment = ({comment, onDelete, onEdit, onLike, onDislike}) => {\n    const [editMode, setEditMode] = useState(false);\n\n    const formik = useFormik({\n        initialValues: {\n            text: comment.text\n        },\n        onSubmit: values => {\n            setEditMode(false)\n            onEdit(values.text)\n        },\n        validationSchema: yup.object({\n            text: yup.string().required('Комментарий не может быть пустым')\n        })\n    })\n\n    return (\n        <Card className={'mt-2'}>\n            <Card.Body className={' text-left p-2'}>\n                {\n                    editMode &&\n                    <>\n                        <Form.Control as={TextareaAutosize} {...formik.getFieldProps('text')} type={'text'}/>\n                        <div className={'d-flex mt-1'}>\n                            <CommentControl icon={'fa-check'} onClick={formik.handleSubmit} className={'ml-auto'}/>\n                        </div>\n                    </>\n                }\n                {\n                    !editMode &&\n                    <>\n                        <TextRenderer>\n                            {comment.text}\n                        </TextRenderer>\n                        <div className={'d-flex mt-1'}>\n\n                            <CommentControl icon={'fa-thumbs-up'} text={comment.likes} onClick={onLike}/>\n                            <CommentControl icon={'fa-thumbs-down'} text={comment.dislikes} onClick={onDislike}/>\n                            <CommentControl icon={'fa-pencil'} onClick={() => setEditMode(true)} className={'ml-auto'}/>\n                            <CommentControl icon={'fa-trash-alt'} onClick={onDelete} className={'ml-3'}/>\n                        </div>\n                    </>\n                }\n\n            </Card.Body>\n        </Card>\n    )\n}\n\n\nconst CommentsSection = ({comments, ...props}) => {\n    const formik = useFormik({\n        initialValues: {\n            text: ''\n        },\n        onSubmit: values => {\n            props.actionCreateComment({text: values.text})\n            formik.setFieldValue('text', '')\n        },\n        validate: values => {\n            if (!values.text)\n                return {\n                    text: 'Введите текст комментария'\n                }\n            return {}\n        }\n    })\n    return (\n        <div className={'mt-4'}>\n            <Form onSubmit={e => e.preventDefault()}>\n\n                <AutoTextareaControl {...formik.getFieldProps('text')}\n                                     placeholder={'Напишите новый комментарий'}\n                                     iconClass={'fal fa-paper-plane'}\n                                     buttonVariant={'outline-light'}\n                                     className={'block'}\n                                     onIconClick={formik.handleSubmit}\n                />\n                {\n                    !!formik.values.text &&\n                    <div className={'mt-1 text-left _block p-2 border-primary mt-2 _filled'}>\n                        <b>Синтаксис комментариев:</b>\n                        <br/>\n                        Напишите #ID карточки, чтобы вставить ссылку на нее\n                        <br/>\n                        [ссылка|читаемое название ссылки]\n                        <br/>\n                        \"\"\"жирный текст\"\"\"\n                    </div>\n                }\n\n            </Form>\n            {\n                comments.map(\n                    comment => <OneComment comment={comment}\n                                           key={comment.id}\n                                           onLike={() => props.actionLikeComment(comment.id)}\n                                           onDislike={() => props.actionDislikeComment(comment.id)}\n                                           onEdit={(text) => props.actionEditComment({id: comment.id, text: text})}\n                                           onDelete={() => props.actionDeleteComment({id: comment.id})}/>\n                )\n            }\n        </div>\n    )\n}\n\nexport default connect(state => ({\n    comments: state.cards.comments,\n\n}), {\n    actionLikeComment,\n    actionDislikeComment,\n    actionCreateComment,\n    actionDeleteComment,\n    actionEditComment\n})(CommentsSection);","\n\n\nexport const getCurrentQueryString = state => state.search.value;\nexport const getCurrentCardId = state => state.cards.card.id;\nexport const getUserToken = state => state.user.user_token;\n","import React from 'react';\nimport {Card} from \"react-bootstrap\";\nimport {StatisticItem} from \"./components/IconElements\";\nimport {connect} from \"react-redux\";\nimport {dateToString} from \"./store/utils\";\nimport {actionDislikeCard, actionLikeCard} from \"./store/reducers/cards\";\n\n\nconst CardControls = ({card, comments, controls, ...props}) => {\n    const statisticItemClass = 'mr-4'\n    console.log(\"controls\", card)\n    return (\n        <Card className={'mt-2'}>\n            <div className={'d-flex justify-content-end'} style={{minHeight: '40px'}}>\n                <StatisticItem icon={'fal fa-link'} className={statisticItemClass}\n                               text={card.categories.reduce((acc, cat) => acc + cat.cards.length, 0)}/>\n                <StatisticItem icon={'fal fa-comment'} className={statisticItemClass} text={comments.length}/>\n                <StatisticItem icon={'fal fa-clock'} className={statisticItemClass}\n                               text={dateToString(new Date(card.timestamp))}/>\n                <StatisticItem icon={'fal fa-thumbs-up'} selectable className={statisticItemClass} text={card.likes}\n                               active={controls.liked}\n                               onClick={() => props.actionLikeCard(card.id)}/>\n                <StatisticItem icon={'fal fa-thumbs-down'} selectable className={statisticItemClass}\n                               active={controls.disliked}\n                               text={card.dislikes} onClick={() => props.actionDislikeCard(card.id)}/>\n                <StatisticItem icon={'fal fa-eye'} className={statisticItemClass} text={card.views}/>\n            </div>\n\n        </Card>\n    )\n}\n\nexport default connect(state => ({\n    card: state.cards.card,\n    comments: state.cards.comments,\n    controls: state.cards.controls,\n}), {\n    actionLikeCard,\n    actionDislikeCard,\n})(CardControls);","import React from 'react';\nimport {SmallCard} from \"./components/SmallCards\";\nimport {connect} from \"react-redux\";\nimport {searchCardsAction} from \"./store/reducers/search\";\n\nlet CardLink = ({searchCardsAction, card, ...props}) => {\n    return (\n        <SmallCard {...props} card={card} onClick={() => searchCardsAction('#' + card.id)}/>\n    )\n}\nCardLink = connect(state => ({}), {searchCardsAction})(CardLink)\n\nexport const CardsList = ({title, cards, ...props}) => {\n    if(!cards)\n        return <></>\n    cards = cards.slice(0, 5)\n    return (\n        <>\n            {\n                !!cards.length &&\n                <div className={'mb-3'}>\n                    <h4>{title}</h4>\n                    {\n                        cards.map(card => (\n                            <CardLink card={card} key={card.id}/>\n                        ))\n                    }\n                </div>\n            }\n        </>\n    )\n}\n\nconst CardsLists = ({history, card, utility_cards, className, ...props}) => {\n\n    return (\n        <div {...props} className={className}>\n            <CardsList title={'История поиска'} cards={history}/>\n            {\n                !!card &&\n                <>\n                    <CardsList title={'Родители'} cards={utility_cards.parents}/>\n                </>\n            }\n        </div>\n    )\n}\n\nexport default connect(state => ({\n    card: state.cards.card,\n    utility_cards: state.cards.utility_cards,\n    history: state.cards.history,\n}), {})(CardsLists);","import React from 'react';\nimport {Button, Modal} from \"react-bootstrap\";\nimport {connect} from \"react-redux\";\nimport {actionCloseError, actionSetOpenHelp} from \"../store/reducers/interface\";\n\n\nconst HelpPage = ({actionSetOpenHelp, isOpenHelp, ...props}) => {\n    const handleClose = () => actionSetOpenHelp(false);\n    return (\n        <Modal show={isOpenHelp} onHide={handleClose} size=\"lg\">\n            <Modal.Header closeButton>\n                <Modal.Title>Справка</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <h3>Описание</h3>\n                <p>\n                    Сервис для создания единого графа взаимосвязей продуктов, технологий и различных понятий,\n                    представленных в виде небольших информационных карточек.\n                </p>\n\n                <p>\n                    Перед внесением изменений,\n                    пожалуйста, прочитайте соответствующие правила (ниже на странице справки). Их соблюдение повысит\n                    удобство использования сервиса всеми участниками, а нарушение крайне осуждается и может привести к\n                    пожизненному бану.\n                </p>\n                <p>\n                    На данный момент сервис находится в разработке, по\n                    всем вопросам и предложениям пишите на почту <a href=\"mailto:cardsnetsup@gmail.com\" target=\"_blank\"\n                                                                    rel=\"nofollow noopener\">cardsnetsup@gmail.com</a>\n                </p>\n\n                <h3>Правила</h3>\n\n                <h5>Создание карточки</h5>\n                Карточки бывают двух видов: информационные и категориальные.\n                <br/>\n                <br/>\n                <b>Информационные</b> отражают один объект, термин, понятие, явление и пр. Должны быть названы в\n                единственном числе и\n                желательно иметь картинку <br/>\n                Например:\n                <ul>\n                    <li>Фирма, продукт, сервис (Apple, очки виртуальной реальности, github)</li>\n                    <li>Технологии (c++, raymatching)</li>\n                    <li>Область знаний (комбинаторика, физика)</li>\n                    <li>Учебное заведение (Школа 91, факультет прикладной математики)</li>\n                    <li>Понятие (звуковая волна, русский реп)</li>\n                </ul>\n                И так далее.\n                <br/>\n                <br/>\n                <b>Категориальные</b> объединяют под собой группу информационных карточек. Должны называться во множественном\n                числе\n                <br/>\n                Например:\n                <ul>\n                    <li>Города России</li>\n                    <li>Библиотеки Python</li>\n                    <li>Сервисы Яндекса</li>\n                </ul>\n                <b>Важно:</b>\n                <ul>\n                    <li>Не допускайте появления дубликатов, перед созданием проверьте, что такой карточки еще не\n                        существует (при вводе названия в окне создания будут появляться подсказки)\n                    </li>\n                    <li>Название должно всегда начинаться с заглавной буквы</li>\n                </ul>\n                <h5>Добавление зависимостей</h5>\n                Нажмите на иконку цепочки в правом верхнем углу карточки, чтобы добавить зависимость.\n                Категория зависимости должна четко отображать, как связаны понятия. <br/>\n                Если вы не нашли подходящую категорию среди существующих, укажите описание, чтобы создать новую, оно\n                должно быть не слишком коротким и доходчиво описывать, что включает в себя эта категория.\n                <br/>\n                Например:\n                <ul>\n                    <li>Русская литетура -> (категория: художественная) -> Мастер и маргарита</li>\n                    <li>Объектно ориентированное программирование -> (категория: языки) -> C++</li>\n                </ul>\n\n                <h5>Написание комментариев</h5>\n                В комментариях МОЖНО:\n                <ul>\n                    <li>Привести ссылки на полезные и интересные\n                        ресурсы по теме карточки\n                    </li>\n                    <li>Пользоваться подсказками и красиво оформить текст с помощью жирного\n                        шрифта, кликабельных читаемых ссылок и прочего\n                    </li>\n                    <li>Описать собственный опыт использования продукта\n                        или технологии из карточки\n                    </li>\n                </ul>\n                В комментариях НЕЛЬЗЯ:\n                <ul>\n                    <li>Проявлять неуважение к другим\n                        людям\n                    </li>\n                    <li>Спамить. Создавать бессполезные комментарии: не по теме карточки, не несущие важного читателям\n                        знания\n                    </li>\n                </ul>\n\n                <h5>Редактирование карточки</h5>\n                Редактировать карточку\n                нужно в нескольких случаях:\n                <ul>\n                    <li>Ссылка на картику стала не валидной</li>\n                    <li>Представленное описание\n                        кажется вам неуместным и вы можете сделать его более понятным и локаничным\n                    </li>\n                    <li>Одна из ссылок на\n                        сайт устарела\n                    </li>\n                    <li>Вы знаете подходящий по теме ресурс и хотите добавить на него ссылку</li>\n                </ul>\n                Нажмите в углу карточке на иконку карандаша, сделав изменения, не забудьте сохранить их.\n                <br/>\n                <br/>\n                <h5>Удаление карточки</h5>\n                Карточку необходимо удалить ТОЛЬКО в том случае, если она не соответствует правилам создания.\n                <br/>\n                <br/>\n                <h5>Редактирование и удаление комментариев</h5>\n                Следует удалить комментарий, не отвечающий правилам. <br/>\n                Комментарий с грамматической, фактической или иной ошибкой возможо\n                отредактировать\n                <br/>\n                <br/>\n                <h3>Подробное описание структуры</h3>\n                <p>\n                    Карточка представляет из себя узел графа, состоит из названия,\n                    описания, картинки, одной или нескольких ссылкок на сайт по теме.</p>\n                <p>\n                    К каждой карточке относится\n                    блок комментариев, приоретезированных в выдаче на основе пользовательских оценок. </p>\n                <p>\n                    Категорория связи - это по своей сути цвет ребра, включает название и описание.\n                </p>\n\n            </Modal.Body>\n            <Modal.Footer>\n                <Button variant=\"primary\" onClick={handleClose}>\n                    Ясно\n                </Button>\n            </Modal.Footer>\n        </Modal>\n    )\n}\n\nexport default connect(state => ({\n    isOpenHelp: state.interface.isOpenHelp,\n}), {\n    actionSetOpenHelp,\n})(HelpPage);","import React from 'react';\nimport BigCard from \"./BigCard\";\nimport {CircleIconButton} from \"./components/CircleIconButton\";\nimport MainSearchLine from \"./MainSearchLine\";\nimport {connect} from \"react-redux\";\nimport NewCard from \"./NewCard\";\nimport {actionSetOpenCreateCard, deleteCardAction} from \"./store/reducers/cards\";\nimport {searchCardsAction} from \"./store/reducers/search\";\nimport EditCard from \"./EditCard\";\nimport {actionSetOpenEdictCard, editCardAction} from \"./store/reducers/editCard\";\nimport ShowMore from \"./components/ShowMore\";\nimport ErrorMessage from \"./components/ErrorMessage\";\nimport CommentsSection from \"./components/CommentsSection\";\nimport CardControls from \"./CardControls\";\nimport CardsLists from \"./CardsLists\";\nimport HelpPage from \"./components/HelpPage\";\nimport {actionSetOpenHelp} from \"./store/reducers/interface\";\n\nconst headerSize = 20\nconst leftSize = 23\nconst centerSize = 100 - leftSize * 2\n\nconst styleMarginsAndWidth = ({top, left, right, width, height}) => {\n    if (!top) top = 0\n    if (!left) left = 0\n    if (!right) right = 0\n    return {\n        marginTop: top + 'vh',\n        marginLeft: left + 'vw',\n        marginRight: right + 'vw',\n        width: width + 'vw',\n        height: height + 'vh'\n    }\n}\n\nconst MainPage = props => {\n\n    const getCardsByType = type => {\n        props.searchCardsAction('@' + type)\n    }\n    console.log('window.location.hostname', window.location.hostname)\n\n    const closeEditCard = () => props.actionSetOpenEdictCard(false);\n\n    return (\n        <>\n            <div>\n\n                <div className=\"fixed-top\" style={styleMarginsAndWidth({top: headerSize, width: leftSize})}>\n                    <div className=\"d-flex justify-content-end pr-5\">\n                        <div className={'d-flex flex-column align-items-center ml-5'}>\n                            <CircleIconButton icon={'fal fa-plus-circle'} name={'Создать'}\n                                              onClick={() => props.actionSetOpenCreateCard(true)}/>\n                            <CircleIconButton icon={'fal fa-star'} name={'Интересное'}\n                                              onClick={() => getCardsByType('interesting')}/>\n                            <CircleIconButton icon={'fal fa-fire'} name={'Популярное'}\n                                              onClick={() => getCardsByType('popular')}/>\n                            <CircleIconButton icon={'fal fa-clock'} name={'Новое'}\n                                              onClick={() => getCardsByType('new')}/>\n                            <CircleIconButton icon={'fal fa-heart'} name={'Нравится'}\n                                              onClick={() => getCardsByType('liked')}/>\n                            <CircleIconButton icon={'fal fa-user'} name={'Созданные'}\n                                              onClick={() => getCardsByType('own')}/>\n\n                            <CircleIconButton icon={'fal fa-question-circle'} name={'Справка'}\n                                              onClick={() => props.actionSetOpenHelp(true)}/>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"fixed-top px-4\"\n                     style={styleMarginsAndWidth({top: headerSize, width: leftSize, left: leftSize + centerSize})}>\n                    <CardsLists/>\n                </div>\n\n                <div className=\"d-flex justify-content-center align-items-center position-fixed\"\n                     style={{\n                         zIndex: 1000,\n                         // position: 'sticky',\n                         top: 0,\n                         ...styleMarginsAndWidth({\n                             left: leftSize,\n                             right: leftSize,\n                             height: headerSize,\n                             width: centerSize\n                         })\n                     }}>\n                    <MainSearchLine/>\n                </div>\n                <div className=\"position-static\"\n                     style={{\n                         ...styleMarginsAndWidth({\n                             left: leftSize,\n                             // top: headerSize,\n                             right: leftSize,\n                         }),\n                         paddingTop: headerSize + 'vh'\n                     }}\n                >\n                    {\n                        props.card &&\n                        <>\n                            <BigCard card={props.card} bottom/>\n                            <CardControls/>\n                            <CommentsSection/>\n                        </>\n                    }\n                    {\n                        props.card === undefined &&\n                        <>\n                            {\n                                props.cards.map(card => <BigCard key={card.id} card={card}/>)\n\n                            }\n                            {\n                                props.haveMoreCards &&\n                                <ShowMore\n                                    onClick={() => props.searchCardsAction(props.searchValue, props.currentPage + 1)}/>\n                            }\n                            {\n                                props.cards.length === 0 && props.card === undefined &&\n                                <h3>Карточек не найдено</h3>\n                            }\n                        </>\n                    }\n                </div>\n            </div>\n            <ErrorMessage/>\n            <HelpPage/>\n            {\n                props.openedCreateCard &&\n                <NewCard handleClose={() => props.actionSetOpenCreateCard(false)}/>\n            }\n            {\n                props.openedEditCard &&\n                <EditCard card={props.editCardValues} handleClose={closeEditCard}\n                          title={`Редактировать карточку ${props.editCardValues.name}`}\n                          initialValues={props.editCardValues}\n                          handleSave={values => {\n                              closeEditCard();\n                              props.editCardAction(props.editCardValues, values);\n                          }}\n                          handleDelete={() => {\n                              closeEditCard();\n                              props.deleteCardAction(props.editCardValues.id);\n                          }}\n                />\n            }\n        </>\n    )\n}\n\nconst mapStateToProps = state => ({\n    card: state.cards.card,\n    cards: state.cards.items,\n    openedCreateCard: state.cards.openedCreateCard,\n    openedEditCard: state.editCard.openedEditCard,\n    editCardValues: state.editCard.card,\n    haveMoreCards: state.cards.more,\n    searchValue: state.search.value,\n    currentPage: state.cards.page,\n})\n\n\nexport default connect(mapStateToProps, {\n    actionSetOpenCreateCard,\n    searchCardsAction,\n    actionSetOpenEdictCard,\n    editCardAction,\n    deleteCardAction,\n    actionSetOpenHelp\n})(MainPage)","import React from 'react';\nimport {connect} from 'react-redux';\nimport MainPage from \"./MainPage\";\nimport {Route, Switch} from \"react-router\";\nimport {\n    actionGetOneCard,\n    actionSearchCardsByText,\n    actionSearchCardsByType, initialAction,\n    searchCardsAction\n} from \"./store/reducers/search\";\nimport {defaultSearchType, singleCardPrefix} from \"./store/config\";\n\nconst queryString = require('query-string');\n\n\nclass OneCardPage extends React.Component {\n    componentDidMount() {\n        this.props.searchCardsAction(singleCardPrefix + this.props.match.params.id)\n    }\n\n    render() {\n        return <></>\n    }\n}\n\nOneCardPage = connect(state => ({}), {searchCardsAction})(OneCardPage)\n\n\nclass CardsQuery extends React.Component {\n    componentDidMount() {\n        this.props.initialAction()\n        const paramsDict = queryString.parse(this.props.location.search);\n        if (paramsDict.q)\n            this.props.searchCardsAction(paramsDict.q)\n        else if (paramsDict.type)\n            this.props.searchCardsAction('@' + paramsDict.type)\n        else\n            this.props.searchCardsAction('@' + defaultSearchType)\n\n    }\n\n    render() {\n        return <></>\n    }\n}\n\nCardsQuery = connect(state => ({}), {searchCardsAction, initialAction})(CardsQuery)\n\nexport default props => {\n\n    return (\n        <>\n            <Switch>\n                <Route path={'/:id'} component={OneCardPage}/>\n                <Route component={CardsQuery}/>\n            </Switch>\n\n            <MainPage/>\n        </>\n    )\n}\n\n","import React from 'react';\nimport './App.css';\nimport {Provider} from \"react-redux\";\nimport store from './store/store'\nimport BaseRouter from \"./BaseRouter\";\nimport {HashRouter as Router} from 'react-router-dom';\nimport {\n    BrowserView,\n    MobileView,\n    isBrowser,\n    isMobile\n} from \"react-device-detect\";\n\nfunction App() {\n    return (\n        <div className=\"App\">\n\n            <Router>\n                <Provider store={store}>\n                    <BrowserView>\n                        <BaseRouter/>\n                    </BrowserView>\n                    <MobileView >\n                        <div className={'d-flex align-items-center justify-content-center m-3'} style={{height: '100vh'}}>\n                                Сервис пока не поддерживает мобильные устройства. Зайдите с компьютера\n                        </div>\n\n                    </MobileView>\n                </Provider>\n            </Router>\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}